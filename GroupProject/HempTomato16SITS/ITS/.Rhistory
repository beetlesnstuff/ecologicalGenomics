physeq = physeqtax,
ordination = all_pcoa) +
geom_point(aes(fill = Treatment, shape = PlantType, color=SampleType), size = 15, stroke=4, alpha =1) +
scale_shape_manual(values = c(21, 22, 23)) +
scale_fill_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
scale_color_manual(values = c("#673770","#5F7FC7","darkseagreen")) +
scale_size_manual(values = c(3, 4, 5)) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
guides(fill = guide_legend(override.aes = list(shape = 21))) +
theme(legend.key.size = unit(2, "lines"))
pca_planttype
pca_treatment <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa
) +
geom_point(aes(color = Treatment), size = 15) +
scale_color_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
theme(legend.key.size = unit(2, "lines"))
pca_treatment
pca_SampleType <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa
) +
geom_point(aes(color = SampleType), size = 15) +
scale_color_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
theme(legend.key.size = unit(2, "lines"))
pca_SampleType
pca_PlantType <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa
) +
geom_point(aes(color = PlantType), size = 15) +
scale_color_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
theme(legend.key.size = unit(2, "lines"))
pca_PlantType
#Filter out eukaryotes and mitochondria
justbacteria <- physeqtax %>%
subset_taxa(
Kingdom == "Bacteria"
)
#Filter out eukaryotes and mitochondria
justfungi <- physeqtax %>%
subset_taxa(
Kingdom == "Fungi"
)
justfungi
#Convert phyloseq object into a data frame with relative abundance counts
phylumabundance <- justbacteria %>%
tax_glom(taxrank = "Genus") %>%
transform_sample_counts(function(x) {x/sum(x)} ) %>%
psmelt() %>%
arrange(Phylum)
#Convert phyloseq object into a data frame with relative abundance counts
phylumabundance <- justfungi %>%
tax_glom(taxrank = "Genus") %>%
transform_sample_counts(function(x) {x/sum(x)} ) %>%
psmelt() %>%
arrange(Phylum)
head(phylumabundance)
#Summarize the most abundant taxa, filter to only include taxa with > 1% abundance
avg.abundance <- phylumabundance %>%
select(Phylum, Treatment, Abundance, PlantType, SampleType) %>%
group_by(Phylum, Treatment, PlantType, SampleType) %>%
summarize(
avg_abundance = mean(Abundance), .groups = 'drop'
) %>%
filter(avg_abundance > 0.0003)
head(avg.abundance)
unique(avg.abundance$Phylum)
dim(avg.abundance)
###Save phylum colors
phylum_colors <- c(
"chocolate1", "cyan3",  "#5F7FC7", "orange","#DA5724", "#508578",
"#AD6F3B", "#673770", "#652926", "#C84248",
"#D1A33D",  "aquamarine3"
)
# Create a factor for SampleType to control the display of x-axis labels
avg.abundance$SampleType <- factor(avg.abundance$SampleType, levels = unique(avg.abundance$SampleType))
avg.abundance$PlantType <- factor(avg.abundance$PlantType, levels = unique(avg.abundance$PlantType))
phylum_avgabundance_sampletype <- ggplot(avg.abundance, aes(x = Treatment, y = avg_abundance, fill = Phylum)) +
geom_col(position = "fill", show.legend = TRUE) +
ylab("Proportion of Community") +
scale_fill_manual(values = phylum_colors) +
xlab(NULL) +
facet_grid(PlantType ~ SampleType) +
theme(strip.text.x = element_blank()) +
theme(
strip.background = element_blank(),
strip.text = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 0, vjust = 0.5, hjust = 1),
axis.title.y = element_text(size = 10),
strip.text.x = element_text(size = 10),  # Adjust facet label size
strip.placement = "outside",  # Place the facet labels outside the plot area
title = element_text(size = 10)
) +
labs(x = "Treatment", subtitle = "")  # Adding a subtitle for PlantType
phylum_avgabundance_sampletype
#Exclude classes
physeqtax <- subset_taxa(physeqtax, !(Phylum %in% c("NA")))
# Exclude NA values for Genus and Species
physeqtax <- subset_taxa(physeqtax, !is.na(Genus) & !is.na(Species))
# Exclude Genus
# physeqtax <- subset_taxa(physeqtax, !(Genus %in% c("JG30-KF-CM45", "CPla-3 termite group", "67-14", "SRB2", "BIrii41", "env.OPS 17",
#                                                    "WWH38", "AKYG1722", "Amb-16S-1323", "A4b", "TRA3-20", "Unknown Family", "NA")))
# # Exclude Species
# physeqtax <- subset_taxa(physeqtax, !(Species %in% c("Ellin516", "DEV008",  "SH-PL14", "JGI 0001001-H03", "BIyi10", "JCM 18997",
#                                                      "Ellin517", "NA")))
physeqtax
###Create violin plot of alpha diversity
alphadiversity_treatment_sampletype <- physeqtax %>%
plot_richness(
x = "Treatment",
measures = c("Shannon")) +
geom_violin(aes(fill = Treatment), show.legend = TRUE) +
geom_boxplot(width=0.1) +
facet_grid(PlantType~SampleType, ) +
theme_light()+
xlab(NULL)+
theme(axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15, hjust = 0.5, vjust = 1, angle = 0),
axis.title.y = element_text(size = 15))+
theme(strip.text = element_text(face = "bold", size = 20))+
scale_fill_manual(values=c("lightgoldenrod","darkorange", "darkred"))+
ggtitle("") +                                        #add title
theme(plot.title=element_text(size = 20, face = "bold", hjust = 0.5))
alphadiversity_treatment_sampletype
all_pcoa <- ordinate(
physeq = physeqtax,
method = "PCoA",
distance = "jaccard"
)
#Plot
pca_sampletype <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa) +
geom_point(aes(fill = Treatment, shape = SampleType, color = PlantType), size = 15, stroke=4, alpha =1) +
scale_shape_manual(values = c(21, 22, 23)) +
scale_fill_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
scale_color_manual(values = c("#673770","#5F7FC7","darkseagreen")) +
scale_size_manual(values = c(3, 4, 5)) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
guides(fill = guide_legend(override.aes = list(shape = 21))) +
theme(legend.key.size = unit(2, "lines"))
pca_sampletype
pca_planttype <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa) +
geom_point(aes(fill = Treatment, shape = PlantType, color=SampleType), size = 15, stroke=4, alpha =1) +
scale_shape_manual(values = c(21, 22, 23)) +
scale_fill_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
scale_color_manual(values = c("#673770","#5F7FC7","darkseagreen")) +
scale_size_manual(values = c(3, 4, 5)) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
guides(fill = guide_legend(override.aes = list(shape = 21))) +
theme(legend.key.size = unit(2, "lines"))
pca_planttype
pca_treatment <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa
) +
geom_point(aes(color = Treatment), size = 15) +
scale_color_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
theme(legend.key.size = unit(2, "lines"))
pca_treatment
pca_SampleType <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa
) +
geom_point(aes(color = SampleType), size = 15) +
scale_color_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
theme(legend.key.size = unit(2, "lines"))
pca_SampleType
pca_PlantType <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa
) +
geom_point(aes(color = PlantType), size = 15) +
scale_color_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
theme(legend.key.size = unit(2, "lines"))
pca_PlantType
#Filter out eukaryotes and mitochondria
justfungi <- physeqtax %>%
subset_taxa(
Kingdom == "Fungi"
)
justfungi
#Convert phyloseq object into a data frame with relative abundance counts
phylumabundance <- justfungi %>%
tax_glom(taxrank = "Genus") %>%
transform_sample_counts(function(x) {x/sum(x)} ) %>%
psmelt() %>%
arrange(Phylum)
head(phylumabundance)
#Summarize the most abundant taxa, filter to only include taxa with > 1% abundance
avg.abundance <- phylumabundance %>%
select(Phylum, Treatment, Abundance, PlantType, SampleType) %>%
group_by(Phylum, Treatment, PlantType, SampleType) %>%
summarize(
avg_abundance = mean(Abundance), .groups = 'drop'
) %>%
filter(avg_abundance > 0.0003)
head(avg.abundance)
unique(avg.abundance$Phylum)
dim(avg.abundance)
###Save phylum colors
phylum_colors <- c(
"chocolate1", "cyan3",  "#5F7FC7", "orange","#DA5724", "#508578",
"#AD6F3B", "#673770", "#652926", "#C84248",
"#D1A33D",  "aquamarine3"
)
# Create a factor for SampleType to control the display of x-axis labels
avg.abundance$SampleType <- factor(avg.abundance$SampleType, levels = unique(avg.abundance$SampleType))
avg.abundance$PlantType <- factor(avg.abundance$PlantType, levels = unique(avg.abundance$PlantType))
phylum_avgabundance_sampletype <- ggplot(avg.abundance, aes(x = Treatment, y = avg_abundance, fill = Phylum)) +
geom_col(position = "fill", show.legend = TRUE) +
ylab("Proportion of Community") +
scale_fill_manual(values = phylum_colors) +
xlab(NULL) +
facet_grid(PlantType ~ SampleType) +
theme(strip.text.x = element_blank()) +
theme(
strip.background = element_blank(),
strip.text = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 0, vjust = 0.5, hjust = 1),
axis.title.y = element_text(size = 10),
strip.text.x = element_text(size = 10),  # Adjust facet label size
strip.placement = "outside",  # Place the facet labels outside the plot area
title = element_text(size = 10)
) +
labs(x = "Treatment", subtitle = "")  # Adding a subtitle for PlantType
phylum_avgabundance_sampletype
#Rarefy_even_depth: Resample an OTU table such that all samples have the same
physeq.prune = prune_taxa(taxa_sums(physeq) > 5, physeq)
physeq.prune
taxmat2 <- as.data.frame(tax_table(physeq.prune))
taxmat2
unique(taxmat2$Phylum)
#Extract the distance matrix from the phyloseq object
my_distance_matrix <- phyloseq::distance(physeq.prune, method = "bray")
head(my_distance_matrix)
#Assuming your sample data is called "sample_data"
adonis_result <- adonis2(my_distance_matrix ~ samples$Treatment +samples$PlantType + samples$SampleType, data = as(samples, "data.frame"))
adonis_result
#above is PERANOVA
physeqtax <- physeq.prune
#Exclude classes
physeqtax <- subset_taxa(physeqtax, !(Phylum %in% c("NA")))
# Exclude NA values for Genus and Species
physeqtax <- subset_taxa(physeqtax, !is.na(Genus) & !is.na(Species))
# Exclude Genus
# physeqtax <- subset_taxa(physeqtax, !(Genus %in% c("JG30-KF-CM45", "CPla-3 termite group", "67-14", "SRB2", "BIrii41", "env.OPS 17",
#                                                    "WWH38", "AKYG1722", "Amb-16S-1323", "A4b", "TRA3-20", "Unknown Family", "NA")))
# # Exclude Species
# physeqtax <- subset_taxa(physeqtax, !(Species %in% c("Ellin516", "DEV008",  "SH-PL14", "JGI 0001001-H03", "BIyi10", "JCM 18997",
#                                                      "Ellin517", "NA")))
physeqtax
###Create violin plot of alpha diversity
alphadiversity_treatment_sampletype <- physeqtax %>%
plot_richness(
x = "Treatment",
measures = c("Shannon")) +
geom_violin(aes(fill = Treatment), show.legend = TRUE) +
geom_boxplot(width=0.1) +
facet_grid(PlantType~SampleType, ) +
theme_light()+
xlab(NULL)+
theme(axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15, hjust = 0.5, vjust = 1, angle = 0),
axis.title.y = element_text(size = 15))+
theme(strip.text = element_text(face = "bold", size = 20))+
scale_fill_manual(values=c("lightgoldenrod","darkorange", "darkred"))+
ggtitle("") +                                        #add title
theme(plot.title=element_text(size = 20, face = "bold", hjust = 0.5))
alphadiversity_treatment_sampletype
all_pcoa <- ordinate(
physeq = physeqtax,
method = "PCoA",
distance = "jaccard"
)
#Plot
pca_sampletype <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa) +
geom_point(aes(fill = Treatment, shape = SampleType, color = PlantType), size = 15, stroke=4, alpha =1) +
scale_shape_manual(values = c(21, 22, 23)) +
scale_fill_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
scale_color_manual(values = c("#673770","#5F7FC7","darkseagreen")) +
scale_size_manual(values = c(3, 4, 5)) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
guides(fill = guide_legend(override.aes = list(shape = 21))) +
theme(legend.key.size = unit(2, "lines"))
pca_sampletype
pca_planttype <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa) +
geom_point(aes(fill = Treatment, shape = PlantType, color=SampleType), size = 15, stroke=4, alpha =1) +
scale_shape_manual(values = c(21, 22, 23)) +
scale_fill_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
scale_color_manual(values = c("#673770","#5F7FC7","darkseagreen")) +
scale_size_manual(values = c(3, 4, 5)) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
guides(fill = guide_legend(override.aes = list(shape = 21))) +
theme(legend.key.size = unit(2, "lines"))
pca_planttype
pca_treatment <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa
) +
geom_point(aes(color = Treatment), size = 15) +
scale_color_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
theme(legend.key.size = unit(2, "lines"))
pca_treatment
pca_SampleType <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa
) +
geom_point(aes(color = SampleType), size = 15) +
scale_color_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
theme(legend.key.size = unit(2, "lines"))
pca_SampleType
pca_PlantType <- plot_ordination(
physeq = physeqtax,
ordination = all_pcoa
) +
geom_point(aes(color = PlantType), size = 15) +
scale_color_manual(values = c("lightgoldenrod", "darkorange", "#CC3333")) +
theme_classic() +
theme(
legend.text = element_text(size = 20),
legend.title = element_blank(),
axis.text.y.left = element_text(size = 15),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)
) +
theme(legend.key.size = unit(2, "lines"))
pca_PlantType
#Filter out eukaryotes and mitochondria
justfungi <- physeqtax %>%
subset_taxa(
Kingdom == "Fungi"
)
justfungi
#Convert phyloseq object into a data frame with relative abundance counts
phylumabundance <- justfungi %>%
tax_glom(taxrank = "Genus") %>%
transform_sample_counts(function(x) {x/sum(x)} ) %>%
psmelt() %>%
arrange(Phylum)
head(phylumabundance)
#Summarize the most abundant taxa, filter to only include taxa with > 1% abundance
avg.abundance <- phylumabundance %>%
select(Phylum, Treatment, Abundance, PlantType, SampleType) %>%
group_by(Phylum, Treatment, PlantType, SampleType) %>%
summarize(
avg_abundance = mean(Abundance), .groups = 'drop'
) %>%
filter(avg_abundance > 0.0003)
head(avg.abundance)
unique(avg.abundance$Phylum)
dim(avg.abundance)
###Save phylum colors
phylum_colors <- c(
"chocolate1", "cyan3",  "#5F7FC7", "orange","#DA5724", "#508578",
"#AD6F3B", "#673770", "#652926", "#C84248",
"#D1A33D",  "aquamarine3"
)
# Create a factor for SampleType to control the display of x-axis labels
avg.abundance$SampleType <- factor(avg.abundance$SampleType, levels = unique(avg.abundance$SampleType))
avg.abundance$PlantType <- factor(avg.abundance$PlantType, levels = unique(avg.abundance$PlantType))
phylum_avgabundance_sampletype <- ggplot(avg.abundance, aes(x = Treatment, y = avg_abundance, fill = Phylum)) +
geom_col(position = "fill", show.legend = TRUE) +
ylab("Proportion of Community") +
scale_fill_manual(values = phylum_colors) +
xlab(NULL) +
facet_grid(PlantType ~ SampleType) +
theme(strip.text.x = element_blank()) +
theme(
strip.background = element_blank(),
strip.text = element_text(size = 10),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 0, vjust = 0.5, hjust = 1),
axis.title.y = element_text(size = 10),
strip.text.x = element_text(size = 10),  # Adjust facet label size
strip.placement = "outside",  # Place the facet labels outside the plot area
title = element_text(size = 10)
) +
labs(x = "Treatment", subtitle = "")  # Adding a subtitle for PlantType
phylum_avgabundance_sampletype
adonis_result
adonis_result
#Assuming your sample data is called "sample_data"
adonis_result <- adonis2(my_distance_matrix ~ samples$Treatment +samples$PlantType + samples$SampleType, data = as(samples, "data.frame"))
adonis_result
install.packages("tinytex")
install.packages("patchwork")
install.packages("patchwork")
source("~/.active-rstudio-document", echo=TRUE)
